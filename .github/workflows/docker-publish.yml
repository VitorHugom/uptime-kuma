name: Docker Build and Push

on:
  push:
    branches: [ master, main, feature/MonitorsImportApi ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: uptime-kuma

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Read version from package.json
      id: pkg
      run: |
        VERSION=$(node -e "console.log(require('./package.json').version)")
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=${{ steps.pkg.outputs.version }}
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=branch
          type=raw,value=feature-monitors-import,enable=${{ github.ref == 'refs/heads/feature/MonitorsImportApi' }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: |
          org.opencontainers.image.version=${{ steps.pkg.outputs.version }}
          org.opencontainers.image.source=${{ github.repository }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
